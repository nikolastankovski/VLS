<RadzenSidebar @bind-Expanded="_isExpandedSideBar" @bind-Visible="isVisibleSideBar" @bind-Responsive="isResponsive">
    <RadzenPanelMenu Style="width:300px" Multiple="@multipleExpand">
        <RadzenPanelMenuItem Text="@Resources.Transactions" Icon="<i class='fa-solid fa-arrows-rotate'></i>">
            <RadzenPanelMenuItem Text="@Resources.VisitorTransactions" Path="buttons" Icon="<i class='fa-solid fa-people-group'></i>"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="@Resources.VehicleTransactions" Path="menu" Icon="<i class='fa-solid fa-truck'></i>"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="@Resources.VisitorsCourse" Path="fileinput" Icon="<i class='fa-solid fa-book-open'></i>"></RadzenPanelMenuItem>
        </RadzenPanelMenuItem>
        <RadzenPanelMenuItem Text="@Resources.Catalogs" Icon="<i class='fa-solid fa-book'></i>">
            <RadzenPanelMenuItem Text="@Resources.OrgUnits" Path="checkbox" Icon="<i class='fa-solid fa-city'></i>"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="@Resources.Employees" Path="textbox" Icon="<i class='fa-solid fa-users'></i>"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="@Resources.Locations" Path="textarea" Icon="<i class='fa-solid fa-warehouse'></i>"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="@Resources.Companies" Path="@CompanyRoutes.Index" Icon="<i class='fa-solid fa-handshake''></i>"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="@Resources.Visitors" Path="numeric" Icon="<i class='fa-solid fa-people-group'></i>"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="@Resources.Vehicles" Path="datepicker" Icon="<i class='fa-solid fa-truck'></i>"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="@Resources.Courses" Path="datepicker" Icon="<i class='fa-solid fa-book-open'></i>"></RadzenPanelMenuItem>
        </RadzenPanelMenuItem>
        @*<RadzenPanelMenuItem Text="Data" Icon="save">
            <RadzenPanelMenuItem Text="DataGrid" Path="datagrid" Icon="grid_on"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="DataList" Path="datalist" Icon="list"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="DropDown" Path="dropdown" Icon="dns"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="DropDownDataGrid" Path="dropdown-datagrid" Icon="receipt"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="ListBox" Path="listbox" Icon="view_list"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="TemplateForm" Path="templateform" Icon="line_style"></RadzenPanelMenuItem>
        </RadzenPanelMenuItem>
        <RadzenPanelMenuItem Text="Containers" Icon="account_box">
            <RadzenPanelMenuItem Text="Tabs" Path="tabs" Icon="tab"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Panel" Path="panel" Icon="content_paste"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Fieldset" Path="fieldset" Icon="account_balance_wallet"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Card" Path="card" Icon="line_style"></RadzenPanelMenuItem>
        </RadzenPanelMenuItem>
        <RadzenPanelMenuItem Text="More">
            <RadzenPanelMenuItem Text="Item1"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Item2"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="More items">
                <RadzenPanelMenuItem Text="More sub items">
                    <RadzenPanelMenuItem Text="Item3"></RadzenPanelMenuItem>
                    <RadzenPanelMenuItem Text="Item4"></RadzenPanelMenuItem>
                </RadzenPanelMenuItem>
            </RadzenPanelMenuItem>
        </RadzenPanelMenuItem>*@
    </RadzenPanelMenu>
</RadzenSidebar>

@code {
    // initially hidden because expanded doesn't work
    private bool isVisibleSideBar = false;
    private bool _isExpandedSideBar;
    private bool multipleExpand = false;
    private bool isResponsive = true;

    [Parameter]
    public bool IsExpandedSideBar
    {
        get => _isExpandedSideBar;
        set
        {
            _isExpandedSideBar = value;
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            isVisibleSideBar = true;
        }
        base.OnAfterRender(firstRender);
    }
}